[["index.html", "Úvod do statistiky Kapitola 1 Úvod 1.1 Příklad popisné statistiky 1.2 Příklad inferenční statistiky 1.3 Simulace", " Úvod do statistiky Jan Schubert 2022-02-09 Kapitola 1 Úvod Tato kniha navazuje na kurz Základy logiky a matematiky (JSB536), ale jeho absolvování není nutné k pochopení látky. Statistika je nástroj, který aplikuje matematiku na získání užitečných informací z dat. Roli statistiky je možné rozdělit na dva úkoly: Popisování většího množství dat (popisná statistika) Předpovídání nějakého fenomenu/určení míry nejistoty (inferenční statistika) 1.1 Příklad popisné statistiky Mnoho fenomenů v každodenním světě je možné vyjádřit pomocí dat. Fotka se dá vyjádřit jako 3D matice (red, green, blue) řádků a sloupců, která vyjadřuje jednotlivé pixely. obrazek &lt;- jpeg::readJPEG(&quot;../imgs/img1.1.jpg&quot;) plot(0:1, 0:1, ann = FALSE, axes = FALSE, type = &quot;n&quot;) rasterImage(obrazek, 0.1, 0, 0.9, 1) Graf 1.1: bert de boer, CC BY 2.0 https://creativecommons.org/licenses/by/2.0, via Wikimedia Commons dim(obrazek) ## [1] 683 1024 3 Můžeme například zobrazit hodnoty červené barvy prvních 5x5 pixelů. obrazek[1:5, 1:5, 1] ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.3568627 0.3490196 0.3411765 0.3333333 0.3294118 ## [2,] 0.3607843 0.3529412 0.3450980 0.3372549 0.3294118 ## [3,] 0.3647059 0.3568627 0.3450980 0.3372549 0.3294118 ## [4,] 0.3686275 0.3607843 0.3490196 0.3411765 0.3294118 ## [5,] 0.3686275 0.3607843 0.3490196 0.3411765 0.3333333 Můžeme zobrazit pouze nějaké řádky a sloupce: plot(0:1,0:1,type=&quot;n&quot;,ann=FALSE,axes=FALSE) rasterImage(obrazek[1:500, 1:500, ] ,0,0,1,1) Protože obrázek je matice dat, můžeme na ni uplatnit různé statistické metody, jako například extrahovat 5 typů barev pomocí shlukovacího algoritmu. k &lt;- 5 cervena &lt;- as.vector(obrazek[, , 1]) zelena &lt;- as.vector(obrazek[, , 2]) modra &lt;- as.vector(obrazek[, , 3]) m &lt;- kmeans(cbind(cervena, zelena, modra), centers = k) barvy &lt;- m$centers barvy_rgb &lt;- rep(NA, k) plot(seq(1, k*10+10, length.out = 10), seq(1, 10, length.out = 10), axes = FALSE, ann = FALSE, type = &quot;n&quot;) for(i in 1:5) { barvy_rgb[i] &lt;- rgb(barvy[i, 1], barvy[i, 2], barvy[i, 3]) rect(i*10, 1, i*10+10, 8, col = barvy_rgb[i]) text(i*10+5, 9, labels = barvy_rgb[i]) } 1.2 Příklad inferenční statistiky Většina jevů okolo nás je ovlivněna náhodou, ať už z důvodu náhodného výběru nebo protože jsou součástí nějakého komplikovaného systému, který ovliňuje hodnoty jevu, který nás zajímá. Počet aut, které projedou na mostě, délka toaletního paríru, který je vyrobený v továrně, to jsou některé příklady jevů, které jsou ovlivněny náhodou. Statistika nám poskytuje soubor nástrojů, jak tuto náhodu (nejistotu) kvantifikovat. Pohlaví dětí je určeno náhodou a nově narozené dítě má zhruba stejnou pravděpodobnost, že bude děvče nebo chlapec. Řekněme, že z důvodu kapacitního plánování nás zajímá, kolik chlapců se narodí, pokud se v porodnoci denně narodí 25 dětí (sám počet narozených dětí by se dal modelovat jako náhodná proměnná). Vidíme, že nejpravděpodobněji se narodí 12 nebo 13 chlapců (v 30% případů). Můžeme také z grafu vypočítat, že více než 15 chlapců se narodí zhruba v 11% případů, tedy zhruba 42 dní v roce (0.11 * 365). n &lt;- 25 p &lt;- 0.5 x &lt;- c(0:25) pocet_chlapcu &lt;- dbinom(x = x, size = n, p) plot(x, pocet_chlapcu, type = &quot;h&quot;, xlab = &quot;Počet chlapců z 25 narozených dětí&quot;, ylab = &quot;Pravděpodobnost&quot;, lwd = 15, col = &quot;#1f77b4&quot;) Graf 1.2: Rozložení počtu chlapců z 25 narozených dětí 1.3 Simulace K pochopení statistiky budeme používat programovací jazyk. Ten nám umožní, abychom si statistické koncepty osahali detailně. Budeme simulovat data, u kterých budeme vědět pravé hodnoty a sledovat, jak (ne)úspěšně různé statistické postupy pravé hodnoty odhadují. Cílem je, abychom statistiku pochopili tak, že ji budeme moci použít na konkrétní problém. Chceme dosáhnout toho, aby statistika byla jazykem, který můžeme použít na různé datové problémy. K pochopení statistiky budeme používat programovací jazyk R. Našim cílem je ale koncepty vysvětlovat a kódovat obecně tak, aby postupy byly lehko přenositelné do jiného programovacího jazyka. Vždy si tedy vysvětlíme konkétní výpočet nebo proceduru do podrobna a to i když existuje balíček nebo funkce, která by daný výpočet provedla za nás. "],["popisná-statistika.html", "Kapitola 2 Popisná statistika 2.1 Míry centrální tendence 2.2 Míry rozptýlenosti", " Kapitola 2 Popisná statistika Jak jsme zmínili v úvodu popisná statistika je jeden z hlavních cílů statistiky. Úkolem popisné statistiky je shrnout informace o našem výběru do pár čísel, které nám pomohou pochopit jaké má náš výběr vlastnosti. Hlavními vlastnostmi, které nás zajímají je: Jaká je typická hodnota měřené proměnné (míra centrální tendence) Na kolik se liší hodnoty jendotlivých pozorování (míra rozptýlenosti) Abychom si popisnou statistiku představili, budeme používat Novoroční/Vánoční projev prezidenta republiky. Nejdříve si data načteme. Text můžeme načíst různými způsoby, my použijeme funkci readLines, která vrátí zpět vektor. prezident &lt;- readLines(&quot;../dats/prezident.txt&quot;, encoding = &quot;UTF-8&quot;) Nejdříve text očistíme o mezery a čárky, přeneseme vše do malých písmen, rozdělíme na věty a potom na slova. Protože tuto proceduru budeme dělat vícekrát uděláme si na to funkci. Výstupem této funkce bude list, jehož každý element reprezentuje jednu větu a v rámci této věty jaká obsahuje slova. vycistit_text &lt;- function(.text) { # vse malym pismem .text &lt;- tolower(.text) # odstranime prazdne radky .text &lt;- .text[.text != &quot;&quot;] # odstranime carky .text &lt;- gsub(pattern = &quot;,&quot;, replacement = &quot;&quot;, x = .text) # rozdelit na vety, pokud najdeme &quot;.&quot; nebo &quot;!&quot; nebo &quot;?&quot; .text &lt;- unlist(strsplit(.text, split = &quot;\\\\.|\\\\!|\\\\?&quot;)) # vymazeme mezery na zacatku a konci .text &lt;- trimws(.text, which = c(&quot;left&quot;)) .text &lt;- trimws(.text, which = c(&quot;right&quot;)) # odstranime prazdne prvky, ktere vznikly protoze po tecce neni zadny text .text &lt;- .text[.text != &quot;&quot;] # rozdelime na slova slova &lt;- list() for (i in 1:length(.text)) { slova[[i]] &lt;- unlist(strsplit(.text[i], split = &quot; &quot;)) } return(slova) } prezident_clean &lt;- vycistit_text(prezident) 2.1 Míry centrální tendence Míry centrální tendence se snaží popsat nějakou typickou hodnotu proměnné. My si představíme modus, medián, průměr, absolutní a relativní četnost. Jaké míry centrální tendence můžeme na proměnné vypočítat se liší podle typu proměnné. Nominální proměnná je taková proměnná, u které nemůžeme hodnoty seřadit od nejmenšího po největší a nemůžeme ani určit o kolik je jedna hodnota větší než jiná. Tou nejzákladnější popisnou statistikou je četnost nějakého jevu a z ní odvozená míra centrální tendence modus. Modus je tedy nejčastější hodnota proměnné. Když se zamyslíte, tak u proměnné u které nemůžeme hodnoty seřadit ani jinak matematicky porovnat je nejčastější hodnota nejvíce vypovídající o typické hodnotě proměnné. Pojďme si jako příklad vypočítat nejčastější slovo z projevu. # nejprve prevedeme list na vekor slova &lt;- unlist(prezident_clean) tabulka_slov &lt;- table(slova) Jak je vidět, naše tabulka četností je velká, obsahuje 651 hodnot. To mimo jiné znamená, že v projevu bylo použito 651 slov. Abychom získali nejčastější hodnotu musíme si tabulku seřadit od největší četnost po nejmenší a zobrazit prvních 10 hodnot. dim(tabulka_slov) ## [1] 651 tabulka_slov_serazena &lt;- sort(tabulka_slov, decreasing = TRUE) head(tabulka_slov_serazena, 10) ## slova ## a je v se že to k i ale by ## 45 24 23 21 17 16 14 9 8 8 Modus této proměnné by byla hodnota “a,” která se vyskytla 45x. To je v textové analýze typické a tato slova se označují jako “stopwords” a jsou zpravidla a textové analýzy vyřazena. Další měrou centrální tendence je median. Medián nám značí prostřední hodnotu nějaké proměnné. Můžeme si jeho výpočet představit tak, že hodnoty proměnné seřadíme od nejmenší po největší a vyberete hodnotu, která bude přesně uprostřed. Tato hodnota je medián. Matematicky se medián u proměnné \\(x\\) vypočítá jako \\(median(x) = x_{(n + 1)/2}\\). Pokud má naše proměnná sudý počet čísel, vypočítá se medián zpravidla jako průměr dvou prostředních hodnot, tedy \\(median(x) = \\frac{x_{n/2} + x_{n/2+1}}{2}\\). Řekněme, že bychom chtěli vědět medián počtu slov ve větě. Nejdříve si musíme pro každou větu (prvek listu prezident_clean) vypočítat počet slov. pocet_slov &lt;- sapply(prezident_clean, length) Velmi dobrým zvykem je si rozložení hodnot proměnné zobrazit graficky. Grafické zobrzení nám vždy poví nejenom o typické hodnotě proměnné, ale i o tom, jak se hodnoty liší (viz Míry rozptýlenosti @ref(#desc-vars)). Pokud máme číselnou proměnnou je nejčastějším způsobem, jak zobrazit hodnoty proměnné histogram. Histogram je: “…je to grafické znázornění distribuce dat pomocí sloupcového grafu se sloupci stejné šířky, vyjadřující šířku intervalů (tříd), přičemž výška sloupců vyjadřuje četnost sledované veličiny v daném intervalu.” Zdroj: Wikipedia Můžeme ho vytvořit pomocí funkce hist. Vidíme, že nejvíce nejčastěji věta obsahuje mezi 5 až 25 slovy, ale některé věty obsahují i více než 35 slov. hist(pocet_slov, col = &quot;#1f77b4&quot;, xlab = &quot;Počet slov ve větě&quot;, ylab = &quot;Četnost&quot;, main = &quot;Histogram počtu slov ve větě&quot;) Graf 2.1: Příklad histogramu na číselné (kardinální) proměnné Medián můžeme vypočítat pomocí funkce median. Mediánový počet slov ve větě je tedy 15.5. n &lt;- length(pocet_slov) # protoze mame sudy pocet slov vypocitame prumer dvou prostrednich hodnot i1 &lt;- n / 2 i2 &lt;- i1 + 1 .median &lt;- mean(pocet_slov[c(i1, i2)]) # nebo pomoci funkce median(pocet_slov) .median ## [1] 15.5 Pojďme si výpočet zobrazit graficky a seřadit si počet slov od nejmenšího po největší a zobrazit si medián na grafu plot(1:n, sort(pocet_slov), col = &quot;#1f77b4&quot;, ylab = &quot;Počet slov ve větě&quot;, xlab = &quot;Pořadí&quot;, main = &quot;Počet slov ve větě seřazený podle velikosti&quot;, type = &quot;h&quot;, lwd = 5 ) # pridame prostredni hodnoty lines(i1, pocet_slov[i1], col = &quot;grey&quot;, type = &quot;h&quot;, lwd = 5) lines(i2, pocet_slov[i2], col = &quot;grey&quot;, type = &quot;h&quot;, lwd = 5) # pridame median lines(mean(c(i1, i2)), .median, col = &quot;red&quot;, type = &quot;h&quot;, lwd = 1, lty = 2) lines(c(-2, mean(c(i1, i2))), c(.median, .median), col = &quot;red&quot;, type = &quot;l&quot;, lwd = 1, lty = 2) legend(&quot;topleft&quot;, col = c(&quot;grey&quot;, &quot;red&quot;), lwd = c(4, 4), legend = c(&quot;Prostřední hodnoty&quot;, &quot;Median&quot;), cex = 0.7 ) Graf 2.2: Seřazení proměnné pro ilustraci výpočtu mediánu Asi nejčastější mírou centrální tendence, která se používá je průměr. Průměr je možné vypočítat pouze pro kardinální proměnné. Technicky kardinální proměnné rozlišujeme na diskrétní a spojitou. Diskrétní nabývá celých čísel (1,2,3,4 etc., například počet dětí), tedy \\(\\in Z\\). Spojitá proměnná pak teoreticky nebývá nekonečně mnoho hodnot, prakticky je ale omezena tím, jak přesně dokážeme danou metriku měřit. Platí ale, že spojité proměnné nabývají racionálních čísel, tedy \\(\\in R\\). Průměr proměnné \\(x\\) vypočítáme jako \\(\\overline{x} = \\frac{1}{n}\\sum_{i=1}^{n} x_i\\). Pojďme tedy vypočítat průměrný počet slov ve větě. V R můžeme použít funkci mean. sum(pocet_slov) / length(pocet_slov) ## [1] 16.56061 Někdy nechceme všem pozorováním při výpočtu průměru dát stejnou váhu. V takovém případě vypočítáme vážený průměr. Jeho vzorec je \\(\\overline{x} = \\frac{\\sum_{i=1}^{n} w_ix_i}{\\sum_{i=1}^{n}w_i}\\). Řekněme například, že bychom průměrný počet slov chtěli vážit pozicí v textu a dát slovům v první větě menší váhu, než slovům, které se objevily později v textu. w &lt;- 1:length(pocet_slov) sum(w * pocet_slov) / sum(w) ## [1] 16.21257 2.2 Míry rozptýlenosti Na tomto grafu se můžete podívat co se stane z daty, která jsou normálně rozdělena (viz Kapitola Pravděpodobnostní rozložení) s průměrem 0 a směrodatnou odchylkou 10, 20, 30 a 40. library(plotly) # vytvorime data, ktera chceme zobrazit n &lt;- 1000 mu &lt;- 0 stds &lt;- seq(10, 40, by = 10) dats &lt;- list() for(step in 1:length(stds)) { dats[[step]] &lt;- list(visible = TRUE, name = paste0(&#39;sd = &#39;, stds[step]), x=rnorm(n, mu, stds[step])) } # do grafu pridame nase data fig &lt;- plotly::plot_ly(alpha = 0.3) for(i in 1:length(stds)) { fig &lt;- fig %&gt;% plotly::add_histogram(x = dats[[i]][[&quot;x&quot;]], visible = dats[[i]][[&quot;visible&quot;]], showlegend = TRUE, name = dats[[i]][[&quot;name&quot;]]) } # upravime nastaveni fig &lt;- fig %&gt;% plotly::layout(barmode = &quot;overlay&quot;, xaxis = list(title = &quot;X&quot;, range = c(-100,100))) # zobrazime fig "],["desc.html", "Kapitola 3 Popisná statistika old 3.1 Nominální proměnná 3.2 Ordinální proměnná 3.3 Kardinální proměnná", " Kapitola 3 Popisná statistika old Klíčové pojmy: popisná x inferenční statistika absolutní a relativní četnost mód, medián, průměr rozptyl, směrodatná odhylka V této přednášce se budeme věnovat popisné statistice. Statistika popisná nám popisuje nějaký soubor čísel. Například, kolik pozorujeme na určitém cvičení Úvodu do statistiky žen a mužů. Statistika inferenční nám pak pomáhá na základě naměřených dat dělat úsudky o celé populaci studentů statistiky, tedy včetně cvičení, které jsme přímo neměřili. Úkolem popisné statistiky je shrnout informace o našem výběru do pár čísel, které nám pomohou pochopit jaké má náš výběr vlastnosti. Hlavními vlastnostmi, které nás zajímají je: Jakáje typická hodnota měřené proměnné Na kolik se liší hodnoty jendotlivých pozorování (jak jsou rozptýlené) Výběr popisné statistiky záleží na typu proměnné, kterou měříme. Z předchozí přednášky víme, že existují 3 typy proměnných: 1) Nominální 2) Ordinální 3) Kardinální Dále víme, že nominální proměnné nemůžeme seřadit, ordinální můžeme seřadit a kardinální můžeme seřadit a zároveň říci o kolik je nějaká hodnota větší než jiná. 3.1 Nominální proměnná Příkladem nominální promněnné je například barva. Vezměme si například situaci, v kterém bychom zjišťovali informace o barvě auta na nějakém konkrétním parkovišti. Na parkovišti parkuje 100 aut. Všechna auta bychom obešli a barvu zaznamenali. Jaký je nejlepší způsob, jak se něco dozvědět o všech 100 autech? Mohli bychom si všechny barvy přečíst a snažit se je zapomatovat tak. To by ale bylo obtížné. A právě proto na to nám slouží popisná statistika. Pomocí jednoho čísla můžeme vystihnout nejpočetnější barvu. Takové popisné statistice říkáme modus. set.seed(42) barvy &lt;- c(&quot;cervena&quot;, &quot;stribrna&quot;, &quot;zelena&quot;, &quot;zluta&quot;, &quot;bila&quot;) barvy_aut &lt;- sample(barvy, size = 100, replace = TRUE) # vytvorime tabulku relativnich cetnosti tabulka &lt;- table(barvy_aut) print(tabulka) ## barvy_aut ## bila cervena stribrna zelena zluta ## 24 20 25 11 20 # vratime nazev kategorie, ktera se vyskytuje nejcasteji names(tabulka)[which.max(tabulka)] ## [1] &quot;stribrna&quot; Protože budeme modus počítat dále, vytvoříme si funkci, která bude výpočet provádět. modus &lt;- function(x) { t &lt;- table(x) return (names(t)[which.max(t)]) } 3.2 Ordinální proměnná U ordinální proměnné, stejně jako u nominální, nemůžeme vypočítat o kolik je nějaká hodnota větší než druhá. Můžeme ale hodnoty seřadit. Toho se využívá k vypočítání popisné statistiky zvané medián. Medián nám značí prostžední hodnotu nějaké proměnné. Můžete si pro představit tak, že hodnoty proměnné seřadíte od nejmenší po největší a vyberete hodnotu, která bude přesně uprostřed. No a tato hodnota je medián. Matematicky se medián u proměnné \\(x\\) vypočítá jako \\(median(x) = x_{(n + 1)/2}\\). Pokud má naše proměnná sudý počet čísel, vypočítá se medián zpravidla jako průměr dvou prostředních hodnot, tedy \\(median(x) = \\frac{x_{n/2} + x_{n/2+1}}{2}\\). Ukážeme si její výpočet na příkladu vzdělání. V našich datech máme 3 stupně vzdělání - zš, sš a vš. Nasimulume příklad, v kterém budeme mít 9 dat. n &lt;- 13 vzdelani &lt;- c(&quot;zs&quot;, &quot;ss&quot;, &quot;vs&quot;) vzdelani_vyber &lt;- sample(vzdelani, size = n, replace = TRUE) #udelame z character faktor (abychom mohli mit serazene hodnoty) vzdelani_vyber &lt;- factor(x = vzdelani_vyber, levels = vzdelani) vzdelani_vyber &lt;- sort(vzdelani_vyber) print(paste0(&quot;Typ promenne, po prevedeni na factor: &quot;, class(vzdelani_vyber))) ## [1] &quot;Typ promenne, po prevedeni na factor: factor&quot; print(vzdelani_vyber) ## [1] zs zs zs zs zs ss ss ss vs vs vs vs vs ## Levels: zs ss vs # vypocitame median indx &lt;- (n + 1) / 2 median_vzdelani &lt;- sort(vzdelani_vyber)[indx] print(paste0(&quot;Medián vzdělání je: &quot;, median_vzdelani)) ## [1] &quot;Medián vzdělání je: ss&quot; Samozřejmě můžeme u ordinálních proměnných počítat také mód. print(paste0(&quot;Modus proměnné je: &quot;, modus(vzdelani_vyber))) ## [1] &quot;Modus proměnné je: zs&quot; Jak si asi pamatujete z předchozího semestru, u různých proměnných jsme počítali relativní četnosti (četnost je počet pozorování učité hodnoty. Relativní četnost potom počet pozorování děleno počet případů celkem). Například jsme počítali relativní četnost výsledků hodů mincí. Výsledky hodu mincí jsou také nominální proměnnou. Další statistikou, kterou můžete u nominálních a ordinálních proměnných spočítat jsou tedy četnosti. Ty nám řeknou více o rozložení hodnot v proměnné. Pojďme si takový příklad ukázat na našem vzorku se vzděláním. #absolutni cetnost absolutni_cetnost &lt;- table(vzdelani_vyber) #relativni cetnost relativni_cetnost &lt;- table(vzdelani_vyber) / length(vzdelani_vyber) knitr::kable(relativni_cetnost, caption = &quot;Relativní četnost kategorie vzdělání&quot;) Tabulka 3.1: Relativní četnost kategorie vzdělání vzdelani_vyber Freq zs 0.3846154 ss 0.2307692 vs 0.3846154 Nejčastějším způsobem zobrazení četností je sloupcový graf (bar plot). barplot(table(vzdelani_vyber), main = &quot;Sloupcový graf proměnné vzdělání&quot;, ylab = &quot;Četnost&quot;, col = &quot;#1f77b4&quot;) Graf 3.1: Sloupcový graf proměnné vzdělání - absolutní četnost barplot(table(vzdelani_vyber) / length(vzdelani_vyber), main = &quot;Sloupcový graf proměnné vzdělání&quot;, ylab = &quot;Relativní četnost&quot;, col = &quot;#1f77b4&quot;) Graf 3.2: Sloupcový graf proměnné vzdělání - relativní četnost 3.3 Kardinální proměnná Kardinální proměnná nám umožňují seřadit hodnoty a říci o kolik jsou větší. Kardinální proměnné jsou tedy číselné. Rozlišujeme mezi diskrétní a spojitou. Diskrétní nabývá celých čísel (1,2,3,4 etc., například počet dětí), tedy \\(\\in Z\\). Spojitá proměnná pak teoreticky nebývá nekonečně mnoho hodnot, prakticky je ale omezena tím, jak přesně dokážeme danou metriku měřit. Platí ale, že spojité proměnné nabývají racionálních čísel, tedy \\(\\in R\\). Stejně jako u ordinální proměnné, můžeme vypočítat modus a medián. Další popisnou statistikou, která nám prozradí něco o velikosti hodnot vnašich datech je průměr. Průměr proměnné \\(x\\) vypočítáme jako \\(\\overline{x} = \\frac{1}{n}\\sum_{i=1}^{n} x_i\\). Pojďme si ukázat, jak průměr vypočítat na datech o počtu dětí. rodiny &lt;- c(2,2,2,2,2,1,1,1,3,3,4,0) pocet_deti &lt;- sample(rodiny, size = 1000, replace = TRUE) prumer &lt;- sum(pocet_deti) / length(pocet_deti) print(paste0(&quot;Průměr proměnné počet dětí je :&quot;, prumer)) ## [1] &quot;Průměr proměnné počet dětí je :1.951&quot; Můžeme také požít funckci mean print(paste0(&quot;Průměr pomocí funkce mean :&quot;, mean(pocet_deti))) ## [1] &quot;Průměr pomocí funkce mean :1.951&quot; Pojďme si ještě vypočítat modus a medián. U číselných proměnných (numeric) můžeme k výpočtu mediánu použít funkci median. print(paste0(&quot;Modus proměnné počt dětí je: &quot;, modus(pocet_deti))) ## [1] &quot;Modus proměnné počt dětí je: 2&quot; print(paste0(&quot;Median proměnné počt dětí je: &quot;, median(pocet_deti))) ## [1] &quot;Median proměnné počt dětí je: 2&quot; Někdy nechceme všem pozorováním při výpočtu průměru dát stejnou váhu. V takovém případě vypočítáme vážený průměr. Jeho vzorec je \\(\\overline{x} = \\frac{\\sum_{i=1}^{n} w_ix_i}{\\sum_{i=1}^{n}w_i}\\). Pokud bychom například měli pouze informace o četnosti počtu dětí, tedy: print(table(pocet_deti)) ## pocet_deti ## 0 1 2 3 4 ## 81 237 418 178 86 nebylo by průměrný počet dětí v datech možné vypočítat pomocí \\(\\overline{x} = (0+1+2+3+4) / 5\\), protože v datech nemáme stejný počet rodin s 0 dětmi, 1 dítětem apod. Musíme jednotlivým hodnotám dát jinou váhu \\(w_i\\) podle toho, kolik jich je v našich datech. V R bychom takovýto vážený průměr mohli vypočítat jako w &lt;- table(pocet_deti) # prevedeme hodnoty 0,1,2,3,4 do numericke promenne, # abychom mohli nasobit a scitat x_i &lt;- as.numeric(names(table(pocet_deti))) vazeny_prumer &lt;- sum(w * x_i) / sum(w) print(paste0(&quot;Vážený průměr je: &quot;, vazeny_prumer)) ## [1] &quot;Vážený průměr je: 1.951&quot; Cože je stejné číslo, jaké jsme dostali, když jsme měli k dispozici všech 1000 pozorování proměnné. U kardinálních spojitých proměnných používáme k vizuálnímu ověření rozložení hodnot proměnné histogram. Histogram je jako sloupcový graf absolutních/relativních četností. Protože u spojitých proměnných neexistuje přirozená hranice pro sloupec, funkce hist vytvoří základní hranice pro sloupce. Ty ale můžete upravit pomocí argumentu breaks. hist(pocet_deti, breaks = c(0,1,2,3,4,5), probability = TRUE, xlab = &quot;Počet dětí&quot;, ylab = &quot;Relativní četnost&quot;, main = &quot;Histogram poštu děti&quot;, col = &quot;#1f77b4&quot;) Jak jsme uvedli na začátku, úkolem popisné statistiky není pouze přiblížit, jak vypadá typická hodnota naší proměnné, ale také přiblížit, jak jsou od sebe odlišné. K tomu nám slouží metrika, kterou nazýváme rozptyl. Rozptyl vypočítáme tak, že každou hodnotu odečteme od průměru a umocníme. Tyto hodnoty sečteme a vydělíme počtem pozorování. Matematicky bychom rozptyl \\(\\sigma^2\\) proměnné \\(x\\) vypočítali jako \\(\\sigma^2 = \\frac{1}{n}\\sum_{i=1}^n (x_i - \\overline{x})^2\\). Ve statistice se také používá pro výpočet rozptýlenosti směrodatná odchylka \\(\\sigma\\), které se vypočítá jako \\(\\sigma = \\sqrt{\\sigma^2}\\) Pojďme vypočítat rozptyl a směrodatnou odchylku u naší proměnné počet dětí. vzdalenost_od_prumeru &lt;- (pocet_deti - mean(pocet_deti))^2 rozptyl &lt;- sum(vzdalenost_od_prumeru) / length(pocet_deti) smerodatna_odchylka &lt;- sqrt(rozptyl) print(paste0(&quot;Rozptyl je:&quot;, rozptyl)) ## [1] &quot;Rozptyl je:1.080599&quot; print(paste0(&quot;Směrodatná odchylka je:&quot;, smerodatna_odchylka)) ## [1] &quot;Směrodatná odchylka je:1.03951863860154&quot; V R můžeme roztyl a směrodatnou odchylku vypočítat pomocí funkcí var a sd. Vzorec, který se v R používá počítá výběrový roztyl a směrodatnou odchylku, ve jmenovateli tedy používá \\(n - 1\\). Rozdíl v těchto přístupech teď není důležitý a ukážeme si ho na dalších cvičeních. Uvádíme ho zde jenom, abychom rozuměli proč jsu výsledky jiné než ty, které jsme spočítali my. print(paste0(&quot;Rozptyl pomocí funkce var je:&quot;, var(pocet_deti))) ## [1] &quot;Rozptyl pomocí funkce var je:1.08168068068068&quot; print(paste0(&quot;Směrodatná odchylka pomoci funkce sd je:&quot;, sd(pocet_deti))) ## [1] &quot;Směrodatná odchylka pomoci funkce sd je:1.04003878806546&quot; Ukažme si princip rozptylu/směrodatné odchylky na imaginárních datech. Na ukázku si vytvoříme proměnnou, která má 10 pozorování a zobrazíme je do grafu jako body. Červená čára označuje průměr těchto bodů. Horizontální čáry potom označují vzdálenost každého pozorování od průměrné hodnoty. Nejdříve si ukážeme příklad s menším rozptylem hodnot a pod ním příklad rozložení s větším rozptylem hodnot. Protože mají oba příklady stejný počet pozorování (10), můžete si rozdíl v jejich rozptylu představit jako rozdíl jejich par(mfrow = c(2,1)) x &lt;- rnorm(10, 5, sd = 1) prumer &lt;- mean(x) n &lt;- seq(1, length(x)) smerodatna_odchylka &lt;- sum((x - mean(x))^2) / (length(x)) plot(x, n, main = paste0(&quot;Směrodatná odchylka: &quot;, round(smerodatna_odchylka, 2)), xlim = c(0,10), xlab = &quot;&quot;, ylab = &quot;Číslo pozorovaní&quot;, pch = 19, col = &quot;#1f77b4&quot;) abline(v = prumer, col = &quot;red&quot;) for(i in n) { lines(c(prumer, x[i]), c(i,i), col = &quot;#1f77b4&quot;) } legend(&quot;topright&quot;, legend = c(&quot;Průměr&quot;, &quot;Vzdal. od průměru&quot;), col = c(&quot;red&quot;, &quot;#1f77b4&quot;), lty = c(1,1), cex = 0.7) x2 &lt;- rnorm(10,5, sd = 2) prumer &lt;- mean(x2) n &lt;- seq(1, length(x2)) smerodatna_odchylka &lt;- sum((x2 - mean(x2))^2) / (length(x)) plot(x2, n, main = paste0(&quot;Směrodatná odchylka: &quot;, round(smerodatna_odchylka, 2)), xlim = c(0,10), xlab = &quot;&quot;, ylab = &quot;Číslo pozorovan9&quot;, pch = 19, col = &quot;#1f77b4&quot;) abline(v = prumer, col = &quot;red&quot;) for(i in n) { lines(c(prumer, x2[i]), c(i,i), col = &quot;#1f77b4&quot;) } legend(&quot;topright&quot;, legend = c(&quot;Průměr&quot;, &quot;Vzdal. od průměru&quot;), col = c(&quot;red&quot;, &quot;#1f77b4&quot;), lty = c(1,1), cex = 0.7) Zkuste si zobrazit histrogram obou proměnných, abyste si udělali lepší představu o tom, jak vypadá jejich rozložení. "],["methods.html", "Kapitola 4 Methods", " Kapitola 4 Methods We describe our methods in this chapter. "],["applications.html", "Kapitola 5 Applications 5.1 Example one 5.2 Example two", " Kapitola 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],["final-words.html", "Kapitola 6 Final Words", " Kapitola 6 Final Words We have finished a nice book. "],["references.html", "References", " References "]]
